// Code generated by mockery v2.8.0. DO NOT EDIT.

package mocks

import (
	gmg "github.com/brandenc40/green-mountain-grill"
	mock "github.com/stretchr/testify/mock"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// GetFirmware provides a mock function with given fields:
func (_m *Client) GetFirmware() ([]byte, error) {
	ret := _m.Called()

	var r0 []byte
	if rf, ok := ret.Get(0).(func() []byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetID provides a mock function with given fields:
func (_m *Client) GetID() ([]byte, error) {
	ret := _m.Called()

	var r0 []byte
	if rf, ok := ret.Get(0).(func() []byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetState provides a mock function with given fields:
func (_m *Client) GetState() (*gmg.State, error) {
	ret := _m.Called()

	var r0 *gmg.State
	if rf, ok := ret.Get(0).(func() *gmg.State); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gmg.State)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IsAvailable provides a mock function with given fields:
func (_m *Client) IsAvailable() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// PowerOff provides a mock function with given fields:
func (_m *Client) PowerOff() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PowerOn provides a mock function with given fields:
func (_m *Client) PowerOn() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PowerOnColdSmoke provides a mock function with given fields:
func (_m *Client) PowerOnColdSmoke() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetGrillTemp provides a mock function with given fields: temp
func (_m *Client) SetGrillTemp(temp int) error {
	ret := _m.Called(temp)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(temp)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetProbe1Target provides a mock function with given fields: temp
func (_m *Client) SetProbe1Target(temp int) error {
	ret := _m.Called(temp)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(temp)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetProbe2Target provides a mock function with given fields: temp
func (_m *Client) SetProbe2Target(temp int) error {
	ret := _m.Called(temp)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(temp)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
